@page
@model RazorPages.Pages.Products.IndexModel
@if (User.Identity?.Name != null)
{
	<p>
	<a asp-page="Create">Create New</a>
</p>}
<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Product[0].Name)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Product[0].Type)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Product[0].Producer)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Product[0].PH)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Product[0].PackingType)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Product[0].Volume)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Product[0].Mineralization)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Product[0].AvailableAmount)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model.Product)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Name)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Type)
				</td>
                <td>
					@if (item.Producer != null)
					{
					    @Html.DisplayFor(modelItem => item.Producer.Email)
					}
                </td>
				<td>
					@Html.DisplayFor(modelItem => item.PH)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.PackingType)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Volume)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Mineralization)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.AvailableAmount)
				</td>
				@if (User.Identity?.Name != null)
				{
					<td>
						<a asp-page="./Edit" asp-route-Id="@item.Id">Edit</a> |
					<a asp-page="./Details" asp-route-Id="@item.Id">Details</a> |
					<a asp-page="./Delete" asp-route-Id="@item.Id">Delete</a>
				</td>
				}
			</tr>
		}
	</tbody>
</table>
